#!/usr/bin/env ruby
require 'rubygems'

# To pickup non-gem oats for local debugging

if File.directory? agent_dir = File.expand_path('../../../oats_agent/lib', __FILE__)
  $:.unshift  agent_dir 
  gem 'log4r'
  require 'oats_agent' # bundler fails when it can't find the gem if not in here 
end

require 'oats_agent/commandline_options'
require 'log4r'

Log4r::Logger.root.level = Log4r::DEBUG
Log4r::StdoutOutputter.new('console', :level=>1,
  :formatter=>Log4r::PatternFormatter.new(:depth=>50,
    :pattern => "%-5l %d %M", :date_pattern=>"%y-%m-%d %H:%M:%S"))
$log = Log4r::Logger.new('R')
$log.add('console')
options = OatsAgent::CommandlineOptions.options(ARGV.dup)
if options["agent_host"].nil? or options["agent_host"] == ENV['HOSTNAME']
  OatsAgent.spawn(options)
else
  params = ARGV.dup
  if RUBY_PLATFORM =~ /(mswin|mingw)/
    cmd = "psexec.exe -d -i -n 10 -w " + ENV['HOME'] + '/results_archive' +
      ' -u qa -p ' + 'passwd' + ' \\\\' + options["agent_host"] +
      ' ruby oats_agent ' + params.join(' ')
  else
    #  params.delete('-a')
    #  params.delete(options["agent_host"])
    #  options['agent_host'] = ENV['HOSTNAME']
    cmd = "ssh " + options["agent_host"] + ' oats_agent ' + params.join(' ')
  end
  out = `#{cmd}`
  $log.info out unless out == ''
end