#!/usr/bin/env ruby
if File.directory? oats_dir = File.expand_path('../../../../oats', __FILE__)
  $:.unshift(oats_dir + '/lib')  # To pickup non-gem oats for local debugging
else
  require 'rubygems'
  gem 'oats'
  # Below are possibly needed when agent is off machine
  #  if RUBY_PLATFORM =~ /linux/ # Seems to be needed by Ubuntu
  #    gem 'execjs'
  #    gem 'therubyracer'
  #  end
end

require 'oats'
require "oats/oats_data"
require "oats/test_data"
require 'oats/roptions'
#require 'pp'
$:.unshift File.expand_path('..', __FILE__)
#pp $:
require "ragent"
require "rclient"

options = Oats::Driver.init
# $oats_execution['agent'] (used by framework) == Oats.global['agent'] (by YAMLs) === options
$oats = Oats::OatsData.load(options['_:ini_file'])
$oats['_']['options'] = options
Oats::Roptions.override(options)
# $oats would be reset and and regenerated by agents across jobs.

options['execution:occ:agent_host'] = $oats['execution']['occ']['agent_host']
options['execution:occ:agent_port'] = $oats['execution']['occ']['agent_port']
options['execution:occ:agent_nickname'] = ($oats['execution']['occ']['agent_nickname'] ||  options['execution:occ:agent_host'].sub(/\..*/,''))
$oats['execution']['occ']['agent_nickname'] = options['execution:occ:agent_nickname']

if ENV['OATS_AGENT_LOGFILE'] 
  # For windows always write to console
  OatsAgent::Ragent.logger.add('console') if RUBY_PLATFORM =~ /(mswin|mingw)/ 
else
  # Otherwise agent should write to console only when running start.rb directly w/o logfile
  OatsAgent::Ragent.logger.add('console')
  ENV['OATS_USER_HOME'] ||= ENV['HOME']
  archive_dir = File.expand_path "results_archive", ENV['OATS_USER_HOME']
  log_dir = "#{archive_dir}/#{options['execution:occ:agent_nickname']}/agent_logs"
  ENV['OATS_AGENT_LOGFILE'] = "#{log_dir}/agent_#{Time.new.to_i}.log"
end

Log4r::FileOutputter.new('agent',
  :filename=>ENV['OATS_AGENT_LOGFILE'], :trunc=>false, :level=>0,
  :formatter=>Log4r::PatternFormatter.new(:depth=>50,
    :pattern => "%-5l %d %M", :date_pattern=>"%y-%m-%d %H:%M:%S"))
#$log.info "Redirecting output to logfile: " + ENV['OATS_AGENT_LOGFILE']
$log.add('agent')
OatsAgent::Ragent.logger.add('agent')    

if options['_:command']
  require 'oats/rclient'
  options['_:id'] = Time.now.to_i.to_s
  request = { :command => options['_:command'], :args => options['_:args'] }
  request[:id] = options['_:id'] if options['_:id']
  EventMachine::run { EventMachine::connect options['execution:occ:agent_host'],
    options['execution:occ:agent_port'].to_i, Rclient, options['execution:occ:agent_host'], request
  }
else
  OatsAgent::Ragent.start $oats['execution']['occ']
end
